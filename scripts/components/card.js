import { likeCard, unlikeCard } from './api.js';
import { popupConfirm, formConfirmDelete } from './constants.js';
import { openModal, closeModal } from './modal.js';
import { deleteCard as deleteCardApi } from './api.js';

// üëâ –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–¥–∞–ª—è–µ–º–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
let cardToDelete = null;
let cardElementToDelete = null;

export function createCard(cardData, { userId, handleDelete, handleLike, handleImageClick }, cardTemplate) {
  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);

  const cardImage = cardElement.querySelector('.card__image');
  const cardTitle = cardElement.querySelector('.card__title');
  const deleteButton = cardElement.querySelector('.card__delete-button');
  const likeButton = cardElement.querySelector('.card__like-button');
  const likeCount = cardElement.querySelector('.card__like-count');

  cardImage.src = cardData.link;
  cardImage.alt = cardData.name;
  cardTitle.textContent = cardData.name;
  likeCount.textContent = cardData.likes.length;

  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –ª–∞–π–∫–Ω—É–ª —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (cardData.likes.some(like => like._id === userId)) {
    likeButton.classList.add('card__like-button_is-active');
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
  if (cardData.owner._id !== userId) {
    deleteButton.remove();
  }

  likeButton.addEventListener('click', () => handleLike(cardData, likeButton, likeCount, userId));
  deleteButton.addEventListener('click', () => handleDelete(cardData, cardElement));
  cardImage.addEventListener('click', () => handleImageClick(cardData));

  return cardElement;
}

// üî® –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
export function deleteCard(cardData, cardElement) {
  cardToDelete = cardData;
  cardElementToDelete = cardElement;
  openModal(popupConfirm);
}

// ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
formConfirmDelete.addEventListener('submit', (evt) => {
  evt.preventDefault();

  deleteCardApi(cardToDelete._id)
    .then(() => {
      cardElementToDelete.remove();
      closeModal(popupConfirm);
      cardToDelete = null;
      cardElementToDelete = null;
    })
    .catch(err => console.error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏: ${err}`));
});

export function toggleLike(cardData, likeButton, likeCount, userId) {
  const isLiked = likeButton.classList.contains('card__like-button_is-active');

  // –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥ API
  const likeRequest = isLiked ? unlikeCard : likeCard;

  likeRequest(cardData._id)
    .then((updatedCard) => {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –µ—Å—Ç—å –ª–∏ –ª–∞–π–∫ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const likedByUser = updatedCard.likes.some(user => user._id === userId);

      likeButton.classList.toggle('card__like-button_is-active', likedByUser);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
      likeCount.textContent = updatedCard.likes.length;

      // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ä—Ç–æ—á–∫–∏, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      cardData.likes = updatedCard.likes;
    })
    .catch((err) => {
      console.error(`–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–∞–π–∫–∞: ${err}`);
    });
}
